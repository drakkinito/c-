Иногда возникает необходимость создать один и тот же метод, но с разным набором параметров. И в зависимости от имеющихся параметров применять определенную версию метода. Такая возможность еще называется перегрузкой методов (method overloading).

И в языке C# мы можем создавать в классе несколько методов с одним и тем же именем, но разной сигнатурой. Что такое сигнатура? Сигнатура складывается из следующих аспектов:

    Имя метода

    Количество параметров

    Типы параметров

    Порядок параметров

    Модификаторы параметров

Но названия параметров в сигнатуру НЕ входят. Например, возьмем следующий метод:
    public int Sum(int x, int y) 
    { 
        return x + y;
    }

У данного метода сигнатура будет выглядеть так: Sum(int, int)

И перегрузка метода как раз заключается в том, что методы имеют разную сигнатуру, в которой совпадает только название метода. То есть методы должны отличаться по:

    Количеству параметров

    Типу параметров

    Порядку параметров

    Модификаторам параметров

Например, пусть у нас есть следующий класс:
    // Add(int, int)
    // Add(int, int, int)
    // Add(int, int, int, int)
    // Add(double, double)
    
    class Calculator
    {
        public void Add(int a, int b)
        {
            int result = a + b;
            Console.WriteLine($"Result is {result}");
        }
        public void Add(int a, int b, int c)
        {
            int result = a + b + c;
            Console.WriteLine($"Result is {result}");
        }
        public int Add(int a, int b, int c, int d)
        {
            int result = a + b + c + d;
            Console.WriteLine($"Result is {result}");
            return result;
        }
        public void Add(double a, double b)
        {
            double result = a + b;
            Console.WriteLine($"Result is {result}");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Calculator calc = new Calculator();
            calc.Add(1, 2); // 3
            calc.Add(1, 2, 3); // 6
            calc.Add(1, 2, 3, 4); // 10
            calc.Add(1.4, 2.5); // 3.9
            
            Console.ReadKey();
        }
    }

Также перегружаемые методы могут отличаться по используемым модификаторам. Например:
    void Increment(ref int val)
    {
        val++;
        Console.WriteLine(val);
    }
     
    void Increment(int val)
    {
        val++;
        Console.WriteLine(val);
    }
    